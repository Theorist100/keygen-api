# Файл: docker-compose.dev.yml (ЗОЛОТАЯ ВЕРСИЯ)
services:
  setup:
    build:
      context: .
      args:
        BUNDLE_WITHOUT_ARG: ""
    # ЭТА КОМАНДА ЗАСТАВИТ КОНТЕЙНЕР ПРОСТО ЖДАТЬ, А НЕ ЗАПУСКАТЬ СЕРВЕР
    command: tail -f /dev/null
    depends_on:
      - postgres
      - redis
    environment:
      # ... все ваши переменные остаются здесь ...
      RAILS_ENV: "development"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1" 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      ENCRYPTION_PRIMARY_KEY: ${ENCRYPTION_PRIMARY_KEY}
      ENCRYPTION_DETERMINISTIC_KEY: ${ENCRYPTION_DETERMINISTIC_KEY}
      ENCRYPTION_KEY_DERIVATION_SALT: ${ENCRYPTION_KEY_DERIVATION_SALT}
      KEYGEN_ACCOUNT_ID: ${KEYGEN_ACCOUNT_ID}
      KEYGEN_HOST: ${KEYGEN_HOST}
    tty: true

  web:
    build:
      context: .
      args:
        BUNDLE_WITHOUT_ARG: ""
    # Это правильная команда для веб-сервера
    command: "web"
    environment:
      # ... все ваши переменные остаются здесь ...
      RAILS_ENV: "development"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      ENCRYPTION_PRIMARY_KEY: ${ENCRYPTION_PRIMARY_KEY}
      ENCRYPTION_DETERMINISTIC_KEY: ${ENCRYPTION_DETERMINISTIC_KEY}
      ENCRYPTION_KEY_DERIVATION_SALT: ${ENCRYPTION_KEY_DERIVATION_SALT}
      KEYGEN_ACCOUNT_ID: ${KEYGEN_ACCOUNT_ID}
      KEYGEN_HOST: ${KEYGEN_HOST}
    volumes:
      - .:/app 
    ports: ["3000:3000"]
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes: [postgres:/var/lib/postgresql/data]
    ports: ["5432:5432"]

  redis:
    image: redis
    volumes: [redis:/data]
    ports: ["6379:6379"]

volumes:
  postgres:
  redis: